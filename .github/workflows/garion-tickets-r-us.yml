name: Garion Runner
on: 
  push:
    branches: [main]
jobs:

# pwd /home/garion/actions-runner/_work/ticketsrus-garion-luris/ticketsrus-garion-luris

  Pipeline:
    runs-on: self-hosted 
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    # - name: Run Test Suite
    #   run: |
    #     cd ./TicketsRUs.Tests/
    #     # docker run -it --rm -v $(pwd):/app -w mcr.microsoft.com/dotnet/sdk:8.0 dotnet format --verify-no-changes --severity warn
    #     dotnet test

    # - name: Docker Down
    #   run: |
    #       cd ./garion-staging 
    #       docker compose down -v
    - name: Clone Repo
      run: |
        cd ..
        rm -rf ./ticketsrus-garion-luris || true 
        git clone https://${{ secrets.GARION_CLONE_KEY }}@github.com/SnowSE/ticketsrus-garion-luris.git
    # - name: Lint 
    #   run: |
    #     # dotnet format --verify-no-changes # --severity warn
    # - name: Docker Up
    #   run: |
        # cd ./garion-staging 

        # docker compose up --build -d
    - name: Kubectl down
      run: |
        kubectl -n garion-1 delete svc blazor-web-db-service || true
        kubectl -n garion-1 delete ingress garion-blazor-ingress || true
        kubectl -n garion-1 delete deployment blazor-web-db-deployment || true
        kubectl -n garion-1 delete deployment garion-blazor-web-deployment || true
        kubectl -n garion-1 delete configmap blazor-web-postgres-init || true
        kubectl -n garion-1 delete configmap otel-config || true
        kubectl -n garion-1 delete configmap grafana-datasource-config || true

# env:
#   value: ${{ secrets.Github_Token}}

    - name: Kubectl Up
      run: |
        export NAMESPACE="garion-pr-$GITHUB_RUN_ID"

        docker build -t 144.17.92.12:5000/garion-1/blazor-web:$GITHUB_RUN_ID .
        docker push 144.17.92.12:5000/garion-1/blazor-web:$GITHUB_RUN_ID

        kubectl -n garion-1 create configmap blazor-web-postgres-init --from-file=init.sql

        cd garion-staging/grafana/provisioning/datasources
          kubectl -n garion-1 create configmap grafana-datasource-config --from-file=datasources.yml
        cd ../../../../

        cd kube-configs
          kubectl -n garion-1 create configmap otel-config --from-file=otel-collector-config.yml
        cd ..

        echo $GITHUB_RUN_IDs
        for file in ./kube/*; do
          echo "Applying $file"
          cat $file | envsubst | kubectl apply -f -
        done

    - uses: actions/checkout@master
    - name: Microsoft Teams Notification
      if: success()
      uses: skitionek/notify-microsoft-teams@master
      with:
        webhook_url: ${{ secrets.GARION_WEBHOOK }}
        needs: ${{ toJson(needs) }}
        job: ${{ toJson(job) }}
        steps: ${{ toJson(steps) }}
    - name: Microsoft Teams Notification (On Failure)
      if: failure()
      uses: skitionek/notify-microsoft-teams@master
      with:
        webhook_url: ${{ secrets.GARION_WEBHOOK }}
        needs: ${{ toJson(needs) }}
        job: ${{ toJson(job) }}
        steps: ${{ toJson(steps) }}
        overwrite: "{title: `Runner failed! ${workflow_link}`}"